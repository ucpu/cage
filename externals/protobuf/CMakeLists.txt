cmake_minimum_required(VERSION 3.22)

message(STATUS "----------------------------------------------------------------")
message(STATUS "protobuf")
message(STATUS "----------------------------------------------------------------")

set(protobuf_INSTALL OFF CACHE INTERNAL "protobuf install")
set(protobuf_BUILD_TESTS OFF CACHE INTERNAL "protobuf tests")
set(protobuf_BUILD_PROTOBUF_BINARIES ON CACHE INTERNAL "protobuf protobuf binaries")
set(protobuf_BUILD_PROTOC_BINARIES ON CACHE INTERNAL "protobuf protoc binaries")
set(protobuf_BUILD_SHARED_LIBS OFF CACHE INTERNAL "protobuf shared lib")
set(protobuf_MSVC_STATIC_RUNTIME OFF CACHE INTERNAL "protobuf msvc static runtime")
set(utf8_range_ENABLE_TESTS OFF CACHE INTERNAL "protobuf utf8_range tests")
set(utf8_range_ENABLE_INSTALL OFF CACHE INTERNAL "protobuf utf8_range install")
set(ABSL_PROPAGATE_CXX_STD ON CACHE INTERNAL "protobuf absl propagate cxx standard")
set(ABSL_IDE_FOLDER "cage/externals/abseil")

add_subdirectory(protobuf)

set(filename "${CAGE_EXTERNALS_MODULE_PATH}/FindProtobuf.cmake")
file(WRITE ${filename} "\n")
macro(append_lib varname libname)
	set(lib $<TARGET_LINKER_FILE:${libname}>)
	set(inc $<TARGET_PROPERTY:${libname},INTERFACE_INCLUDE_DIRECTORIES>)
	cage_gen_module_helper(${filename} ${varname} "${lib}" "${inc}")
endmacro()
append_lib(Protobuf protobuf)
append_lib(Protobuf_LITE protobuf-lite)
append_lib(Protobuf_PROTOC protoc)
file(APPEND "${filename}" "set(Protobuf_PROTOC_EXECUTABLE protobuf::protoc)\n")
configure_file("${CMAKE_CURRENT_LIST_DIR}/protobuf/cmake/protobuf-generate.cmake" "${CAGE_EXTERNALS_MODULE_PATH}/protobuf/protobuf-generate.cmake" COPYONLY)
file(APPEND "${filename}" "include(\${CMAKE_CURRENT_LIST_DIR}/protobuf/protobuf-generate.cmake)\n")
configure_file("${CMAKE_CURRENT_LIST_DIR}/protobuf/cmake/protobuf-module.cmake.in" "${CAGE_EXTERNALS_MODULE_PATH}/protobuf/protobuf-module.cmake" COPYONLY)
file(APPEND "${filename}" "include(\${CMAKE_CURRENT_LIST_DIR}/protobuf/protobuf-module.cmake)\n")
